{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/config/config.service.ts","./src/app/models/polizas.ts","./src/app/polizas/poliza.component.css","./src/app/polizas/poliza.component.html","./src/app/polizas/poliza.component.ts","./src/app/polizas/poliza.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA,4BAA4B,SAAS,aAAa,uBAAuB,wBAAwB,GAAG,OAAO,wBAAwB,GAAG,OAAO,mBAAmB,GAAG,oBAAoB,oBAAoB,GAAG,aAAa,0BAA0B,6BAA6B,6BAA6B,GAAG,8CAA8C,4BAA4B,yBAAyB,OAAO,4BAA4B,2BAA2B,OAAO,KAAK,C;;;;;;;ACA/d,md;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,gBAAgB,CAAC;IAC3B,CAAC;IAFY,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACe;AACH;AAOP;AAC8B;AAE7B;AACc;AAEL;AACC;AA0BzD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAxBrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;gBACZ,kFAAe;aAChB;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,8EAAgB;gBAChB,0EAAe;gBACf,wEAAa;gBACb,6EAAkB;gBAClB,yEAAc;gBACd,0EAAe;gBACf,4EAAiB;gBACjB,2EAAgB;gBAChB,kGAAoB;gBACpB,2EAAmB;aACpB;YACD,SAAS,EAAE;gBACT,6EAAa;gBACb,8EAAa;aACd;YACD,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;AC3CqB;AACO;AAUlD;IAGI,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,cAAS,GAAG,oBAAoB,CAAC;IAEO,CAAC;IAEzC,iCAAS,GAAT;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACzC,CAAC;IAPQ,aAAa;QADzB,yEAAU,EAAE;yCAIiB,wEAAU;OAH3B,aAAa,CAQzB;IAAD,oBAAC;CAAA;AARyB;;;;;;;;;ACX1B;AAAA;IAAA;IAKA,CAAC;IAAD,aAAC;AAAD,CAAC;;;;;;;;;ACLD,mCAAmC,2BAA2B,2BAA2B,oBAAoB,mCAAmC,oCAAoC,qCAAqC,qCAAqC,GAAG,2BAA2B,kBAAkB,GAAG,C;;;;;;;ACAjT,8VAA8V,sDAAsD,kYAAkY,sDAAsD,yYAAyY,0DAA0D,6IAA6I,WAAW,qaAAqa,2DAA2D,kd;;;;;;;;;;;;;;;;;;;;;;;ACAv0D;AACiB;AACjC;AAEH;AACI;AAOjD;IAME;;;;;OAKG;IACH,yBAAmB,QAAqB,EAC9B,WAAwB,EACxB,aAA4B;QAFnB,aAAQ,GAAR,QAAQ,CAAa;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAE3C;;OAEG;IACH,kCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,wCAAc,GAAd;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,cAAI;YAC9C,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;OAGG;IACH,4CAAkB,GAAlB,UAAmB,EAAe;QAChC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;IAC7D,CAAC;IAED;;OAEG;IACH,mCAAS,GAAT;QAAA,iBAiBC;QAhBC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;YACxB,IAAI,CAAC,MAAM,GAAG,IAAI,+DAAM,EAAE,CAAC;YAC3B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YAC9D,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YAC9D,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;YACvE,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;YAE1E,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;iBACvC,SAAS,CAAC,gBAAM;gBACf,KAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,GAAG,GAAG,EAAE;oBAC9D,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;IACH,CAAC;IAED;;OAEG;IACH,8BAAI,GAAJ;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,MAAM,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC;YAClD,MAAM,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC;YAClD,UAAU,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC;YACtD,WAAW,EAAE,IAAI,mEAAW,CAAC,CAAC,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC;SACvD,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;IAC/C,CAAC;IAvEU,eAAe;QAL3B,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAa6B,sEAAW;YACjB,mEAAW;YACT,sEAAa;OAd3B,eAAe,CAwE3B;IAAD,sBAAC;CAAA;AAxE2B;;;;;;;;;;;;;;;;;;;;;;ACZuB;AACY;AAOF;AAE7D,IAAM,GAAG,GAAG,8EAAW,CAAC,WAAW,CAAC;AAEpC,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,yEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;KACnC,CAAC;CACH,CAAC;AAGF;IAME,uBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAJlC,qBAAgB,GAAY,iBAAiB,CAAC;QAC9C,oBAAe,GAAY,kBAAkB,CAAC;QAC9C,yBAAoB,GAAY,gBAAgB,CAAC;IAEZ,CAAC;IAE9C;;OAEG;IACH,sCAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAC1D,CAAC;IAED;;;OAGG;IACH,kCAAU,GAAV,UAAW,MAAc;QACvB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAS,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;IACvF,CAAC;IAED;;;OAGG;IACH,sCAAc,GAAd,UAAe,UAAsB;QACnC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAa,GAAG,GAAG,IAAI,CAAC,oBAAoB,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;IACpG,CAAC;IA7BU,aAAa;QADzB,yEAAU,EAAE;yCAOqB,wEAAU;OAN/B,aAAa,CA8BzB;IAAD,oBAAC;CAAA;AA9ByB;;;;;;;;;ACnB1B;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,WAAW,EAAE,0CAA0C;CACxD,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"img.logo {\\n    \\n}\\n\\nsection {\\n    max-width: 620px;\\n    margin: 60px auto;\\n}\\n\\ni {\\n    margin-right: 8px;\\n}\\n\\na {\\n    color: white;\\n}\\n\\n.github-button {\\n    display: none;\\n}\\n\\n.spacer {\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1 1 auto;\\n            flex: 1 1 auto;\\n}\\n\\n@media only screen and (min-width: 600px){\\n    .filters-form-fields {\\n        width: initial;\\n    }\\n    \\n    .github-button {\\n        display: initial;\\n    }\\n\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n    <i class=\\\"material-icons\\\">\\n      lock\\n    </i>\\n    <span>Full Stack Developer Test</span>\\n    <span class=\\\"spacer\\\"></span>\\n    <a href=\\\"https://github.com/fernandoarevalo/sffst-frontend\\\">\\n      <i class=\\\"fab fa-github\\\"></i>\\n      <span class=\\\"github-button\\\">GitHub</span>\\n    </a>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n\\n<section>\\n  <app-poliza></app-poliza>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sffst-frontend';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { MatButtonModule, \n  MatCardModule, \n  MatFormFieldModule, \n  MatInputModule, \n  MatSelectModule, \n  MatSnackBarModule, \n  MatToolbarModule } from '@angular/material';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { PolizaComponent } from './polizas/poliza.component';\n\nimport { ConfigService } from \"./config/config.service\";\nimport { PolizaService } from \"./polizas/poliza.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PolizaComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    NoopAnimationsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    ConfigService,\n    PolizaService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface Config {\n    apiUrl: string;\n    tipoPolizasUrl: string;\n    tipoPolizaUrl: string;\n    polizaSeguroUrl: string;\n}\n\n@Injectable()\nexport class ConfigService {\n    configUrl = 'assets/config.json';\n\n    constructor(private http: HttpClient) { }\n\n    getConfig() {\n        return this.http.get(this.configUrl);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/config/config.service.ts","export class Poliza {\n    cedula: string;\n    nombre: string;\n    tipo_poliza: number;\n    numero_poliza: number;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/polizas.ts","module.exports = \".form-container {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n}\\n  \\n.form-container > * {\\n    width: 100%;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/polizas/poliza.component.css\n// module id = ./src/app/polizas/poliza.component.css\n// module chunks = main","module.exports = \"<mat-card>\\n  <mat-card-title>\\n    Compra tu Póliza\\n  </mat-card-title>\\n\\n  <form [formGroup]=\\\"polizaForm\\\" (ngSubmit)=\\\"addPoliza()\\\">\\n    <mat-card-content>\\n      <div class=\\\"form-container\\\">\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Cédula\\\" type=\\\"text\\\" formControlName=\\\"cedula\\\" [ngClass]=\\\"{ 'is-invalid': submitted && polizaForm.cedula.errors }\\\"\\n            required>\\n          <div *ngIf=\\\"submitted && polizaForm.cedula.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"polizaForm.cedula.errors.required\\\">Campo cédula requerido</div>\\n          </div>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nombre\\\" type=\\\"text\\\" formControlName=\\\"nombre\\\" [ngClass]=\\\"{ 'is-invalid': submitted && polizaForm.nombre.errors }\\\"\\n            required>\\n          <div *ngIf=\\\"submitted && polizaForm.nombre.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"polizaForm.nombre.errors.required\\\">Campo nombre requerido</div>\\n          </div>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Tipo de póliza\\\" formControlName=\\\"tipoPoliza\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && polizaForm.tipoPoliza.errors }\\\" required>\\n            <mat-option *ngFor=\\\"let tp of tiposPoliza\\\" [value]=\\\"tp.valor\\\" (onSelectionChange)=\\\"setValorTipoPoliza(tp)\\\">{{tp.nombre}}</mat-option>\\n          </mat-select>\\n          <div *ngIf=\\\"submitted && polizaForm.tipoPoliza.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"polizaForm.tipoPoliza.errors.required\\\">Campo nombre requerido</div>\\n          </div>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Valor de póliza\\\" type=\\\"text\\\" formControlName=\\\"valorPoliza\\\" [ngClass]=\\\"{ 'is-invalid': submitted && polizaForm.valorPoliza.errors }\\\"\\n            required>\\n          <div *ngIf=\\\"submitted && polizaForm.valorPoliza.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"polizaForm.valorPoliza.errors.required\\\">Campo valor póliza requerido</div>\\n          </div>\\n        </mat-form-field>\\n      </div>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\">GUARDAR</button>\\n    </mat-card-actions>\\n  </form>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/polizas/poliza.component.html\n// module id = ./src/app/polizas/poliza.component.html\n// module chunks = main","import { Component, EventEmitter, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from \"@angular/material\";\nimport { TipoPoliza } from \"../models/tipo-polizas\";\nimport { Poliza } from \"./../models/polizas\";\nimport { PolizaService } from \"./poliza.service\";\n\n@Component({\n  selector: 'app-poliza',\n  templateUrl: './poliza.component.html',\n  styleUrls: ['./poliza.component.css']\n})\nexport class PolizaComponent implements OnInit {\n\n  private polizaForm: FormGroup;\n  private poliza: Poliza;\n  private tiposPoliza: any;\n\n  /**\n   * PolizaComponent constructor   \n   * @param snackBar \n   * @param formBuilder \n   * @param polizaService \n   */\n  constructor(public snackBar: MatSnackBar,\n    private formBuilder: FormBuilder,\n    private polizaService: PolizaService) { }\n\n  /**\n   * NgOnInit implementation\n   */\n  ngOnInit() {\n    this.form();\n    this.getTipoPolizas();\n  }\n\n  getTipoPolizas(): void {\n    this.polizaService.getTipoPolizas().subscribe(data => {\n        this.tiposPoliza = data;\n      });\n  }\n\n  /**\n   * Set TipoPoliza value\n   * @param $event \n   */\n  setValorTipoPoliza(tp : TipoPoliza) {\n    this.polizaForm.controls['valorPoliza'].setValue(tp.valor);\n  }\n\n  /**\n   * Add new poliza, call api\n   */\n  addPoliza(): void {\n    if (this.polizaForm.valid) {\n      this.poliza = undefined;\n      this.poliza = new Poliza();\n      this.poliza.cedula = this.polizaForm.controls['cedula'].value;\n      this.poliza.nombre = this.polizaForm.controls['nombre'].value;\n      this.poliza.tipo_poliza = this.polizaForm.controls['tipoPoliza'].value;\n      this.poliza.numero_poliza = this.polizaForm.controls['valorPoliza'].value;\n\n      this.polizaService.postPoliza(this.poliza)\n        .subscribe(poliza => {\n          this.form();\n          this.snackBar.open('Póliza creada', poliza.numero_poliza + '!', {\n            duration: 5000,\n          });\n        });\n    }\n  }\n\n  /**\n   * Set new form\n   */\n  form(){\n    this.polizaForm = this.formBuilder.group({\n      cedula: new FormControl('', [Validators.required]),\n      nombre: new FormControl('', [Validators.required]),\n      tipoPoliza: new FormControl('', [Validators.required]),\n      valorPoliza: new FormControl(0, [Validators.required]),\n    });\n    this.polizaForm.get('valorPoliza').disable();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/polizas/poliza.component.ts","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { catchError } from 'rxjs/operators';\n\nimport { Poliza } from \"../models/polizas\";\nimport { TipoPoliza } from \"../models/tipo-polizas\";\n\nimport { environment } from '../../environments/environment';\n\nconst API = environment.apiEndpoint;\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\n\n@Injectable()\nexport class PolizaService {\n\n  private URL_TIPO_POLIZAS : String = 'v1/tipo-polizas';\n  private URL_POST_POLIZA : String = 'v1/poliza-seguro';\n  private URL_POST_TIPO_POLIZA : String = 'v1/tipo-poliza';\n\n  constructor(private httpClient: HttpClient) {}\n\n  /**\n   * Get Tipos polizas\n   */\n  getTipoPolizas() {\n    return this.httpClient.get(API + this.URL_TIPO_POLIZAS);\n  }\n\n  /**\n   * Add new poliza\n   * @param poliza \n   */\n  postPoliza(poliza: Poliza) {\n    return this.httpClient.post<Poliza>(API + this.URL_POST_POLIZA, poliza, httpOptions);\n  }\n\n  /**\n   * Add new poliza type\n   * @param tipoPoliza \n   */\n  postTipoPoliza(tipoPoliza: TipoPoliza) {\n    return this.httpClient.post<TipoPoliza>(API + this.URL_POST_TIPO_POLIZA, tipoPoliza, httpOptions);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/polizas/poliza.service.ts","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiEndpoint: 'https://sffst-backend.herokuapp.com/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}